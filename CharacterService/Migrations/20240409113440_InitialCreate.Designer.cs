// <auto-generated />
using CharacterService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CharacterService.Migrations;

[DbContext(typeof(CharacterDbContext))]
[Migration("20240409113440_InitialCreate")]
partial class InitialCreate
{
    /// <inheritdoc />
    protected override void BuildTargetModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.3")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("CharacterItem", b =>
            {
                b.Property<int>("CharactersId")
                    .HasColumnType("int");

                b.Property<int>("ItemsId")
                    .HasColumnType("int");

                b.HasKey("CharactersId", "ItemsId");

                b.HasIndex("ItemsId");

                b.ToTable("CharacterItems", (string)null);
            });

        modelBuilder.Entity("CharacterService.Models.Character", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("BaseAgility")
                    .HasColumnType("int");

                b.Property<int>("BaseFaith")
                    .HasColumnType("int");

                b.Property<int>("BaseIntelligence")
                    .HasColumnType("int");

                b.Property<int>("BaseStrength")
                    .HasColumnType("int");

                b.Property<int>("ClassId")
                    .HasColumnType("int");

                b.Property<int>("CreatedById")
                    .HasColumnType("int");

                b.Property<int>("Health")
                    .HasColumnType("int");

                b.Property<int>("Mana")
                    .HasColumnType("int");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)");

                b.HasKey("Id");

                b.HasIndex("ClassId");

                b.HasIndex("Name")
                    .IsUnique();

                b.ToTable("Characters");
            });

        modelBuilder.Entity("CharacterService.Models.Class", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(450)");

                b.HasKey("Id");

                b.HasIndex("Name")
                    .IsUnique();

                b.ToTable("Classes");
            });

        modelBuilder.Entity("CharacterService.Models.Item", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<int>("BonusAgility")
                    .HasColumnType("int");

                b.Property<int>("BonusFaith")
                    .HasColumnType("int");

                b.Property<int>("BonusIntelligence")
                    .HasColumnType("int");

                b.Property<int>("BonusStrength")
                    .HasColumnType("int");

                b.Property<string>("Description")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .IsRequired()
                    .HasColumnType("nvarchar(max)");

                b.HasKey("Id");

                b.ToTable("Items");
            });

        modelBuilder.Entity("CharacterItem", b =>
            {
                b.HasOne("CharacterService.Models.Character", null)
                    .WithMany()
                    .HasForeignKey("CharactersId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.HasOne("CharacterService.Models.Item", null)
                    .WithMany()
                    .HasForeignKey("ItemsId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();
            });

        modelBuilder.Entity("CharacterService.Models.Character", b =>
            {
                b.HasOne("CharacterService.Models.Class", "Class")
                    .WithMany("Characters")
                    .HasForeignKey("ClassId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Class");
            });

        modelBuilder.Entity("CharacterService.Models.Class", b =>
            {
                b.Navigation("Characters");
            });
#pragma warning restore 612, 618
    }
}
